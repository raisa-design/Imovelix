// <auto-generated />
using System;
using Imovelix.Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Imovelix.Api.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230709192044_imovelAtributo")]
    partial class imovelAtributo
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.0-preview.5.23280.1");

            modelBuilder.Entity("Imovelix.Dominio.Entidades.Anuncios.Anuncio", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Fotos")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ImovelId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ImovelId");

                    b.ToTable("Anuncios");
                });

            modelBuilder.Entity("Imovelix.Dominio.Entidades.Anuncios.Endereco", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Complemento")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Numero")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Referencia")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Enderecos");
                });

            modelBuilder.Entity("Imovelix.Dominio.Entidades.Anuncios.Imovel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("EnderecoId")
                        .HasColumnType("TEXT");

                    b.Property<int>("QuantBanheiros")
                        .HasColumnType("INTEGER");

                    b.Property<int>("QuantQuartos")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TipoImovel")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Vagas")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("EnderecoId");

                    b.ToTable("Imoveis");
                });

            modelBuilder.Entity("Imovelix.Dominio.Entidades.Anuncios.Anuncio", b =>
                {
                    b.HasOne("Imovelix.Dominio.Entidades.Anuncios.Imovel", "Imovel")
                        .WithMany()
                        .HasForeignKey("ImovelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Imovel");
                });

            modelBuilder.Entity("Imovelix.Dominio.Entidades.Anuncios.Imovel", b =>
                {
                    b.HasOne("Imovelix.Dominio.Entidades.Anuncios.Endereco", "Endereco")
                        .WithMany()
                        .HasForeignKey("EnderecoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Endereco");
                });
#pragma warning restore 612, 618
        }
    }
}
